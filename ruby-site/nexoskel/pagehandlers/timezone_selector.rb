class ProfileInfoSelectors < PageHandler
	
	declare_handlers("Nexoskel/selector") {
		area :Skeleton
		
		page :GetRequest, :Full, :timezone, "timezone"		
		page :GetRequest, :Full, :timezone, "timezone", input(String)
	}
	
	Option = Struct.new :value, :text;
	
	TIMEZONES = {
		0 => "Select Timezone",
		
		2	=> "Africa/Abidjan",
		3	=> "Africa/Accra",
		4	=> "Africa/Addis_Ababa",
		5	=> "Africa/Algiers",
		7	=> "Africa/Bamako",
		8	=> "Africa/Bangui",
		9	=> "Africa/Banjul",
		10	=> "Africa/Bissau",
		11	=> "Africa/Blantyre",
		12	=> "Africa/Brazzaville",
		13	=> "Africa/Bujumbura",
		14	=> "Africa/Cairo",
		15	=> "Africa/Casablanca",
		16	=> "Africa/Ceuta",
		17	=> "Africa/Conakry",
		18	=> "Africa/Dakar",
		19	=> "Africa/Dar_es_Salaam",
		20	=> "Africa/Djibouti",
		21	=> "Africa/Douala",
		22	=> "Africa/El_Aaiun",
		23	=> "Africa/Freetown",
		24	=> "Africa/Gaborone",
		25	=> "Africa/Harare",
		26	=> "Africa/Johannesburg",
		27	=> "Africa/Kampala",
		28	=> "Africa/Khartoum",
		29	=> "Africa/Kigali",
		30	=> "Africa/Kinshasa",
		31	=> "Africa/Lagos",
		32	=> "Africa/Libreville",
		33	=> "Africa/Lome",
		34	=> "Africa/Luanda",
		35	=> "Africa/Lubumbashi",
		36	=> "Africa/Lusaka",
		37	=> "Africa/Malabo",
		38	=> "Africa/Maputo",
		39	=> "Africa/Maseru",
		40	=> "Africa/Mbabane",
		41	=> "Africa/Mogadishu",
		42	=> "Africa/Monrovia",
		43	=> "Africa/Nairobi",
		44	=> "Africa/Ndjamena",
		45	=> "Africa/Niamey",
		46	=> "Africa/Nouakchott",
		47	=> "Africa/Ouagadougou",
		48	=> "Africa/Porto-Novo",
		49	=> "Africa/Sao_Tome",
		51	=> "Africa/Tripoli",
		52	=> "Africa/Tunis",
		53	=> "Africa/Windhoek",
		55	=> "America/Adak",
		56	=> "America/Anchorage",
		57	=> "America/Anguilla",
		58	=> "America/Antigua",
		59	=> "America/Araguaina",
		60	=> "America/Aruba",
		61	=> "America/Asuncion",
		63	=> "America/Barbados",
		64	=> "America/Belem",
		65	=> "America/Belize",
		66	=> "America/Boa_Vista",
		67	=> "America/Bogota",
		68	=> "America/Boise",
		69	=> "America/Argentina/Buenos_Aires",
		70	=> "America/Cambridge_Bay",
		71	=> "America/Cancun",
		72	=> "America/Caracas",
		73	=> "America/Argentina/Catamarca",
		74	=> "America/Cayenne",
		75	=> "America/Cayman",
		76	=> "America/Chicago",
		77	=> "America/Chihuahua",
		78	=> "America/Argentina/Cordoba",
		79	=> "America/Costa_Rica",
		80	=> "America/Cuiaba",
		81	=> "America/Curacao",
		82	=> "America/Danmarkshavn",
		83	=> "America/Dawson_Creek",
		84	=> "America/Dawson",
		85	=> "America/Denver",
		86	=> "America/Detroit",
		87	=> "America/Dominica",
		88	=> "America/Edmonton",
		89	=> "America/Eirunepe",
		90	=> "America/El_Salvador",
		93	=> "America/Fortaleza",
		94	=> "America/Glace_Bay",
		95	=> "America/Godthab",
		96	=> "America/Goose_Bay",
		97	=> "America/Grand_Turk",
		98	=> "America/Grenada",
		99	=> "America/Guadeloupe",
		100	=> "America/Guatemala",
		101	=> "America/Guayaquil",
		102	=> "America/Guyana",
		103	=> "America/Halifax",
		104	=> "America/Havana",
		105	=> "America/Hermosillo",
		106	=> "America/Indiana/Indianapolis",
		107	=> "America/Indiana/Knox",
		108	=> "America/Indiana/Marengo",
		109	=> "America/Indiana/Vevay",
		111	=> "America/Inuvik",
		112	=> "America/Iqaluit",
		113	=> "America/Jamaica",
		114	=> "America/Argentina/Jujuy",
		115	=> "America/Juneau",
		116	=> "America/Kentucky/Louisville",
		117	=> "America/Kentucky/Monticello",
		119	=> "America/La_Paz",
		120	=> "America/Lima",
		121	=> "America/Los_Angeles",
		123	=> "America/Maceio",
		124	=> "America/Managua",
		125	=> "America/Manaus",
		126	=> "America/Martinique",
		127	=> "America/Mazatlan",
		128	=> "America/Argentina/Mendoza",
		129	=> "America/Menominee",
		130	=> "America/Merida",
		131	=> "America/Mexico_City",
		132	=> "America/Miquelon",
		133	=> "America/Monterrey",
		134	=> "America/Montevideo",
		135	=> "America/Montreal",
		136	=> "America/Montserrat",
		137	=> "America/Nassau",
		138	=> "America/New_York",
		139	=> "America/Nipigon",
		140	=> "America/Nome",
		141	=> "America/Noronha",
		142	=> "America/North_Dakota/Center",
		143	=> "America/Panama",
		144	=> "America/Pangnirtung",
		145	=> "America/Paramaribo",
		146	=> "America/Phoenix",
		147	=> "America/Port_of_Spain",
		148	=> "America/Port-au-Prince",
		150	=> "America/Porto_Velho",
		151	=> "America/Puerto_Rico",
		152	=> "America/Rainy_River",
		153	=> "America/Rankin_Inlet",
		154	=> "America/Recife",
		155	=> "America/Regina",
		156	=> "America/Rio_Branco",
		158	=> "America/Santiago",
		159	=> "America/Santo_Domingo",
		160	=> "America/Sao_Paulo",
		161	=> "America/Scoresbysund",
		163	=> "America/St_Johns",
		164	=> "America/St_Kitts",
		165	=> "America/St_Lucia",
		166	=> "America/St_Thomas",
		167	=> "America/St_Vincent",
		168	=> "America/Swift_Current",
		169	=> "America/Tegucigalpa",
		170	=> "America/Thule",
		171	=> "America/Thunder_Bay",
		172	=> "America/Tijuana",
		173	=> "America/Tortola",
		174	=> "America/Vancouver",
		176	=> "America/Whitehorse",
		177	=> "America/Winnipeg",
		178	=> "America/Yakutat",
		179	=> "America/Yellowknife",
		180	=> "Antarctica/Casey",
		181	=> "Antarctica/Davis",
		182	=> "Antarctica/DumontDUrville",
		183	=> "Antarctica/Mawson",
		184	=> "Antarctica/McMurdo",
		185	=> "Antarctica/Palmer",
		187	=> "Antarctica/Syowa",
		188	=> "Antarctica/Vostok",
		191	=> "Asia/Aden",
		192	=> "Asia/Almaty",
		193	=> "Asia/Amman",
		194	=> "Asia/Anadyr",
		195	=> "Asia/Aqtau",
		196	=> "Asia/Aqtobe",
		197	=> "Asia/Ashgabat",
		199	=> "Asia/Baghdad",
		200	=> "Asia/Bahrain",
		201	=> "Asia/Baku",
		202	=> "Asia/Bangkok",
		203	=> "Asia/Beirut",
		204	=> "Asia/Bishkek",
		205	=> "Asia/Brunei",
		206	=> "Asia/Calcutta",
		207	=> "Asia/Choibalsan",
		208	=> "Asia/Chongqing",
		210	=> "Asia/Colombo",
		212	=> "Asia/Damascus",
		213	=> "Asia/Dhaka",
		214	=> "Asia/Dili",
		215	=> "Asia/Dubai",
		216	=> "Asia/Dushanbe",
		217	=> "Asia/Gaza",
		218	=> "Asia/Harbin",
		219	=> "Asia/Hong_Kong",
		220	=> "Asia/Hovd",
		221	=> "Asia/Irkutsk",
		223	=> "Asia/Jakarta",
		224	=> "Asia/Jayapura",
		225	=> "Asia/Jerusalem",
		226	=> "Asia/Kabul",
		227	=> "Asia/Kamchatka",
		228	=> "Asia/Karachi",
		229	=> "Asia/Kashgar",
		230	=> "Asia/Katmandu",
		231	=> "Asia/Krasnoyarsk",
		232	=> "Asia/Kuala_Lumpur",
		233	=> "Asia/Kuching",
		234	=> "Asia/Kuwait",
		236	=> "Asia/Magadan",
		237	=> "Asia/Manila",
		238	=> "Asia/Muscat",
		239	=> "Asia/Nicosia",
		240	=> "Asia/Novosibirsk",
		241	=> "Asia/Omsk",
		242	=> "Asia/Phnom_Penh",
		243	=> "Asia/Pontianak",
		244	=> "Asia/Pyongyang",
		245	=> "Asia/Qatar",
		246	=> "Asia/Rangoon",
		247	=> "Asia/Riyadh",
		251	=> "Asia/Saigon",
		252	=> "Asia/Sakhalin",
		253	=> "Asia/Samarkand",
		254	=> "Asia/Seoul",
		255	=> "Asia/Shanghai",
		256	=> "Asia/Singapore",
		257	=> "Asia/Taipei",
		258	=> "Asia/Tashkent",
		259	=> "Asia/Tbilisi",
		260	=> "Asia/Tehran",
		263	=> "Asia/Thimphu",
		264	=> "Asia/Tokyo",
		266	=> "Asia/Ulaanbaatar",
		268	=> "Asia/Urumqi",
		269	=> "Asia/Vientiane",
		270	=> "Asia/Vladivostok",
		271	=> "Asia/Yakutsk",
		272	=> "Asia/Yekaterinburg",
		273	=> "Asia/Yerevan",
		275	=> "Atlantic/Azores",
		276	=> "Atlantic/Bermuda",
		277	=> "Atlantic/Canary",
		278	=> "Atlantic/Cape_Verde",
		281	=> "Atlantic/Madeira",
		282	=> "Atlantic/Reykjavik",
		283	=> "Atlantic/South_Georgia",
		284	=> "Atlantic/St_Helena",
		285	=> "Atlantic/Stanley",
		287	=> "Australia/Adelaide",
		288	=> "Australia/Brisbane",
		289	=> "Australia/Broken_Hill",
		291	=> "Australia/Darwin",
		549 => 'Australia/Eucla',
		292	=> "Australia/Hobart",
		294	=> "Australia/Lindeman",
		295	=> "Australia/Lord_Howe",
		296	=> "Australia/Melbourne",
		299	=> "Australia/Perth",
		302	=> "Australia/Sydney",
		313	=> "Canada/Atlantic",
		314	=> "Canada/Central",
		315	=> "Canada/Eastern",
		316	=> "Canada/East-Saskatchewan",
		317	=> "Canada/Mountain",
		318	=> "Canada/Newfoundland",
		319	=> "Canada/Pacific",
		320	=> "Canada/Saskatchewan",
		321	=> "Canada/Yukon",
		327	=> "CST",
		328	=> "CST6CDT",
		330	=> "Cuba",
		334	=> "Egypt",
		335	=> "Eire",
		336	=> "EST",
		337	=> "EST5EDT",
		373	=> "Europe/Amsterdam",
		374	=> "Europe/Andorra",
		375	=> "Europe/Athens",
		377	=> "Europe/Belgrade",
		378	=> "Europe/Berlin",
		380	=> "Europe/Brussels",
		381	=> "Europe/Bucharest",
		382	=> "Europe/Budapest",
		383	=> "Europe/Chisinau",
		384	=> "Europe/Copenhagen",
		385	=> "Europe/Dublin",
		386	=> "Europe/Gibraltar",
		387	=> "Europe/Helsinki",
		388	=> "Europe/Istanbul",
		389	=> "Europe/Kaliningrad",
		390	=> "Europe/Kiev",
		391	=> "Europe/Lisbon",
		393	=> "Europe/London",
		394	=> "Europe/Luxembourg",
		395	=> "Europe/Madrid",
		396	=> "Europe/Malta",
		397	=> "Europe/Minsk",
		398	=> "Europe/Monaco",
		399	=> "Europe/Moscow",
		401	=> "Europe/Oslo",
		402	=> "Europe/Paris",
		403	=> "Europe/Prague",
		404	=> "Europe/Riga",
		405	=> "Europe/Rome",
		406	=> "Europe/Samara",
		409	=> "Europe/Simferopol",
		411	=> "Europe/Sofia",
		412	=> "Europe/Stockholm",
		413	=> "Europe/Tallinn",
		414	=> "Europe/Tirane",
		416	=> "Europe/Uzhgorod",
		417	=> "Europe/Vaduz",
		419	=> "Europe/Vienna",
		420	=> "Europe/Vilnius",
		421	=> "Europe/Warsaw",
		423	=> "Europe/Zaporozhye",
		424	=> "Europe/Zurich",
		427	=> "GMT",
		428	=> "GMT0",
		429	=> "Greenwich",
		430	=> "Hongkong",
		432	=> "Iceland",
		434	=> "Indian/Antananarivo",
		435	=> "Indian/Chagos",
		436	=> "Indian/Christmas",
		437	=> "Indian/Cocos",
		438	=> "Indian/Comoro",
		439	=> "Indian/Kerguelen",
		440	=> "Indian/Mahe",
		441	=> "Indian/Maldives",
		442	=> "Indian/Mauritius",
		443	=> "Indian/Mayotte",
		444	=> "Indian/Reunion",
		445	=> "Iran",
		446	=> "Israel",
		448	=> "Jamaica",
		449	=> "Japan",
		451	=> "Kwajalein",
		452	=> "Libya",
		461	=> "MST",
		462	=> "MST7MDT",
		465	=> "NST",
		468	=> "Pacific/Apia",
		469	=> "Pacific/Auckland",
		470	=> "Pacific/Chatham",
		471	=> "Pacific/Easter",
		472	=> "Pacific/Efate",
		473	=> "Pacific/Enderbury",
		474	=> "Pacific/Fakaofo",
		475	=> "Pacific/Fiji",
		476	=> "Pacific/Funafuti",
		477	=> "Pacific/Galapagos",
		478	=> "Pacific/Gambier",
		479	=> "Pacific/Guadalcanal",
		480	=> "Pacific/Guam",
		481	=> "Pacific/Honolulu",
		482	=> "Pacific/Johnston",
		483	=> "Pacific/Kiritimati",
		484	=> "Pacific/Kosrae",
		485	=> "Pacific/Kwajalein",
		486	=> "Pacific/Majuro",
		487	=> "Pacific/Marquesas",
		488	=> "Pacific/Midway",
		489	=> "Pacific/Nauru",
		490	=> "Pacific/Niue",
		491	=> "Pacific/Norfolk",
		492	=> "Pacific/Noumea",
		493	=> "Pacific/Pago_Pago",
		494	=> "Pacific/Palau",
		495	=> "Pacific/Pitcairn",
		496	=> "Pacific/Ponape",
		497	=> "Pacific/Port_Moresby",
		498	=> "Pacific/Rarotonga",
		499	=> "Pacific/Saipan",
		500	=> "Pacific/Samoa",
		501	=> "Pacific/Tahiti",
		502	=> "Pacific/Tarawa",
		503	=> "Pacific/Tongatapu",
		504	=> "Pacific/Truk",
		505	=> "Pacific/Wake",
		506	=> "Pacific/Wallis",
		510	=> "Poland",
		511	=> "Portugal",
		514	=> "PST",
		515	=> "PST8PDT",
		517	=> "Singapore",
		532	=> "Turkey",
		535	=> "US/Alaska",
		536	=> "US/Aleutian",
		537	=> "US/Arizona",
		538	=> "US/Central",
		539	=> "US/Eastern",
		540	=> "US/East-Indiana",
		541	=> "US/Hawaii",
		543	=> "US/Michigan",
		544	=> "US/Mountain",
		545	=> "US/Pacific",
		547	=> "US/Samoa",
		548	=> "UTC",
		550	=> "Africa/Asmara",
		551	=> "America/Argentina/La_Rioja",
		552	=> "America/Argentina/Rio_Gallegos",
		553	=> "America/Argentina/San_Juan",
		554	=> "America/Argentina/Tucuman",
		555	=> "America/Argentina/Ushuaia",
		556	=> "America/Atikokan",
		557	=> "America/Bahia",
		558	=> "America/Blanc-Sablon",
		559	=> "America/Campo_Grande",
		560	=> "America/Indiana/Petersburg",
		561	=> "America/Indiana/Vincennes",
		562	=> "America/Moncton",
		563	=> "America/North_Dakota/New_Salem",
		564	=> "America/Toronto",
		565	=> "Antarctica/Rothera",
		566	=> "Asia/Macau",
		567	=> "Asia/Makassar",
		568	=> "Asia/Oral",
		569	=> "Asia/Qyzylorda",
		570	=> "Atlantic/Faroe",
		571	=> "Australia/Currie",
		572	=> "Europe/Volgograd"
	};
	
	
	def timezone(value=nil)
		options = __option_array(TIMEZONES);
		
		t = Template.instance("nexoskel", "selector");
		t.options = options;
		t.ref = "timezone";
		t.value = value;
		t.onchange_handler = params['onchange_handler', String, nil];
		
		puts t.display;
	end


	def __option_array(hash)
		options = Array.new;
		
		hash.keys.sort.each { |key| 
			options << Option.new(key, hash[key]);
		};
		
		return options;
	end
end
